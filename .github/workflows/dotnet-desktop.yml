name: .NET Core Desktop - TrinhDuyet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: TrinhDuyet.sln
#      Test_Project_Path: TrinhDuyet.Tests\TrinhDuyet.Tests.csproj  # nếu có test project
      Wap_Project_Directory: TrinhDuyet.Package
      Wap_Project_Path: TrinhDuyet.Package\TrinhDuyet.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Cài .NET Core
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Cài MSBuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Chạy unit tests nếu có
    - name: Execute unit tests
      run: dotnet test $env:Test_Project_Path

    # Restore solution
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}
      env:
        Configuration: ${{ matrix.configuration }}

    # Giải mã file PFX
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Build và package WAP project
    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

    # Xoá file pfx sau khi build
    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    # Upload MSIX package
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
